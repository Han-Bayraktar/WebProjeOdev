<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #2f2f2f;
            color: white;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        .container {
            margin: 20px 0;
        }

        .table-selector,
        .table-data,
        .crud-actions {
            background-color: #333;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .table-data {
            overflow-x: auto;
        }

            .table-selector h3,
            .table-data h3 {
                color: #fff;
            }

            .table-data table {
                width: 100%;
                border-collapse: collapse;
                color: white; /* Tablodaki verileri beyaz renkte yazmak için */
            }

            .table-data th, .table-data td {
                padding: 10px;
                text-align: left;
                background-color: #444;
            }

            .table-data th {
                background-color: #555;
            }

        .action-button {
            background-color: #007bff;
            color: white;
            padding: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

            .action-button:hover {
                background-color: #0056b3;
            }

        .add-button {
            background-color: #17a2b8;
        }

            .add-button:hover {
                background-color: #138496;
            }

        .edit-button {
            background-color: #28a745;
        }

            .edit-button:hover {
                background-color: #218838;
            }

        .delete-button {
            background-color: #dc3545;
        }

            .delete-button:hover {
                background-color: #c82333;
            }

        .crud-actions form {
            display: flex;
            flex-direction: column;
        }

            .crud-actions form div {
                margin-bottom: 15px;
            }

            .crud-actions form label {
                display: block;
                margin-bottom: 5px;
            }

            .crud-actions form input {
                width: 100%;
                padding: 10px;
                background-color: #333;
                color: white;
                border: 1px solid #444;
                border-radius: 5px;
            }

            .crud-actions form button {
                background-color: #28a745;
                color: white;
                padding: 10px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                margin-top: 10px;
            }

                .crud-actions form button[type="button"] {
                    background-color: #dc3545;
                    margin-left: 10px;
                }

                    .crud-actions form button[type="button"]:hover {
                        background-color: #c82333;
                    }

    </style>
</head>
<body>

    <div class="container">
        <h2>@ViewData["Title"]</h2>

        <div class="row">
            <!-- Tablo Seçimi -->
            <div class="col-md-4 col-12 mb-4">
                <div class="table-selector">
                    <h3>Veritabanı Tabloları</h3>
                    <select id="tableSelect" class="form-select" onchange="loadTableData(this.value)">
                        <option value="Employees">Employees</option>
                        <option value="Services">Services</option>
                        <option value="Users">Users</option>
                        <option value="Appointments">Appointments</option>
                    </select>
                </div>
            </div>

            <!-- Tablo Verileri -->
            <div class="col-md-8 col-12">
                <div id="tableData" class="table-data"></div>
            </div>
        </div>

        <!-- CRUD Form -->
        <div id="crudActions" class="crud-actions">
            <h3>CRUD İşlemleri</h3>
            <form id="crudForm">
                <div id="formFields"></div>
                <button type="button" onclick="submitForm()">Kaydet</button>
            </form>
            <button type="button" onclick="deleteRecord()">Sil</button>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        let selectedTable = null;
        let selectedRecordId = null;

        function loadTableData(tableName) {
            selectedTable = tableName;

            fetch(`/api/admin/get${capitalize(tableName)}`)
                .then(response => response.json())
                .then(data => {
                    if (Array.isArray(data) && data.length > 0) {
                        const columns = Object.keys(data[0]);
                        const rows = data.map(item => Object.values(item));

                        let tableHtml = `
                                    <div class="table-header d-flex justify-content-between align-items-center">
                                        <h3>${capitalize(tableName)} Tablosu</h3>
                                        <button class="action-button add-button" onclick="showAddForm('${tableName}')">Yeni Eleman Ekle</button>
                                    </div>`;
                        tableHtml += "<table class='table table-striped table-bordered'><thead><tr>";

                        columns.forEach(column => {
                            tableHtml += `<th>${column}</th>`;
                        });
                        tableHtml += "<th>Actions</th></tr></thead><tbody>";

                        rows.forEach((row, index) => {
                            tableHtml += "<tr>";
                            row.forEach(cell => {
                                tableHtml += `<td>${cell}</td>`;
                            });
                            tableHtml += `<td><button class="action-button edit-button" onclick="editRecord(${index}, ${row[0]})">Düzenle</button>`;
                            tableHtml += `<button class="action-button delete-button" onclick="deleteRecord(${row[0]})">Sil</button></td>`;
                            tableHtml += "</tr>";
                        });

                        tableHtml += "</tbody></table>";
                        document.getElementById("tableData").innerHTML = tableHtml;
                        document.getElementById("crudActions").style.display = "none";
                    } else {
                        document.getElementById("tableData").innerHTML = "<p>Veri yüklenemedi. Lütfen tekrar deneyin.</p>";
                    }
                })
                .catch(error => console.error("Hata:", error));
        }

        function showAddForm(tableName) {
            selectedTable = tableName;
            const crudActionsDiv = document.getElementById("crudActions");

            crudActionsDiv.innerHTML = `<h3>Yeni ${capitalize(tableName)} Ekle</h3>
                                <form id="crudForm">
                                    <div id="formFields"></div>
                                    <button type="button" onclick="submitForm()">Kaydet</button>
                                </form>`;

            fetch(`/api/admin/get${capitalize(selectedTable)}`)
                .then(response => response.json())
                .then(data => {
                    const formFieldsDiv = document.getElementById("formFields");
                    const firstRecord = data[0];
                    const fields = Object.keys(firstRecord);

                    fields.forEach(field => {
                        formFieldsDiv.innerHTML += `
                                    <div>
                                        <label for="${field}">${field}</label>
                                        <input type="text" id="${field}" name="${field}">
                                    </div>`;
                    });
                });

            crudActionsDiv.style.display = "block";
        }

        function submitForm() {
            const formData = new FormData(document.getElementById("crudForm"));
            const data = {};

            formData.forEach((value, key) => {
                data[key] = value;
            });

            fetch(`/api/admin/add${capitalize(selectedTable)}`, {
                method: 'POST',
                body: JSON.stringify(data),
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    loadTableData(selectedTable);
                    document.getElementById("crudActions").style.display = "none";
                })
                .catch(error => console.error("Hata:", error));
        }

        function editRecord(index, recordId) {
            selectedRecordId = recordId;
            const crudActionsDiv = document.getElementById("crudActions");
            crudActionsDiv.innerHTML = `<h3>Veri Düzenle</h3>
                                <form id="crudForm">
                                    <div id="formFields"></div>
                                    <button type="button" onclick="submitForm()">Kaydet</button>
                                </form>
                                <button type="button" onclick="deleteRecord(${recordId})">Sil</button>`;

            fetch(`/api/admin/get${capitalize(selectedTable)}`)
                .then(response => response.json())
                .then(data => {
                    const record = data.find(item => item.Id === recordId);
                    const formFieldsDiv = document.getElementById("formFields");
                    const fields = Object.keys(record);

                    fields.forEach(field => {
                        formFieldsDiv.innerHTML += `
                                    <div>
                                        <label for="${field}">${field}</label>
                                        <input type="text" id="${field}" name="${field}" value="${record[field]}">
                                    </div>`;
                    });
                });

            crudActionsDiv.style.display = "block";
        }

        function deleteRecord(recordId) {
            if (confirm("Emin misiniz? Bu işlem geri alınamaz!")) {
                fetch(`/api/admin/delete${capitalize(selectedTable)}?id=${recordId}`, {
                    method: 'DELETE'
                })
                    .then(response => response.json())
                    .then(data => loadTableData(selectedTable))
                    .catch(error => console.error("Hata:", error));
            }
        }

        function capitalize(str) {
            return str.charAt(0).toUpperCase() + str.slice(1);
        }
    </script>

</body>
</html>

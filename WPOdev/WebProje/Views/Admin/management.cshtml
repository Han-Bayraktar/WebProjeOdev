<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #2f2f2f;
            color: white;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            margin-top: 80px;
        }

        .container {
            margin: 20px 0;
        }

        .table-selector,
        .table-data,
        .crud-actions {
            background-color: #333;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .table-data {
            overflow-x: auto;
            color: white;
        }

        .table-selector h3,
        .table-data h3 {
            color: #fff;

        }

        .table-data table {
            width: 100%;
            border-collapse: collapse;
            color: white; 
        }

        .table-data th, .table-data td {
            padding: 10px;
            text-align: left;
            background-color: #444;
            color: white;
        }

        .table-data th {
            background-color: #555;
            color:white;

        }


        .action-button {
            background-color: #007bff;
            color: white;
            padding: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .action-button:hover {
            background-color: #0056b3;
        }

        .add-button {
            background-color: #17a2b8;
        }

        .add-button:hover {
            background-color: #138496;
        }

        .edit-button {
            background-color: #28a745;
        }

        .edit-button:hover {
            background-color: #218838;
        }

        .delete-button {
            background-color: #dc3545;
        }

        .delete-button:hover {
            background-color: #c82333;
        }

        .crud-actions form {
            display: flex;
            flex-direction: column;
        }

        .crud-actions form div {
            margin-bottom: 15px;
        }

        .crud-actions form label {
            display: block;
            margin-bottom: 5px;
        }

        .crud-actions form input {
            width: 100%;
            padding: 10px;
            background-color: #333;
            color: white;
            border: 1px solid #444;
            border-radius: 5px;
        }

        .crud-actions form button {
            background-color: #28a745;
            color: white;
            padding: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 10px;
        }

        .crud-actions form button[type="button"] {
            background-color: #dc3545;
            margin-left: 10px;
        }

        .crud-actions form button[type="button"]:hover {
            background-color: #c82333;
        }

        
    </style>
</head>
<body>

    <div class="container">
        <h2>@ViewData["Title"]</h2>

        <div class="row">
            <!-- Tablo Seçimi -->
            <div class="col-md-4 col-12 mb-4">
                <div class="table-selector">
                    <h3>Veritabanı Tabloları</h3>
                    <select id="tableSelect" class="form-select" onchange="loadTableData(this.value)">
                        <option value="Employees">Employees</option>
                        <option value="Services">Services</option>
                        <option value="Users">Users</option>
                        <option value="Appointments">Appointments</option>
                    </select>
                </div>
            </div>

            <div class="col-md-8 col-12">
                <div id="tableData" class="table-data"></div>
            </div>
        </div>

        <!-- CRUD Form -->
        <div id="crudActions" class="crud-actions">
            <h3>CRUD İşlemleri</h3>
            <form id="crudForm">
                <div id="formFields"></div>
                <button type="button" onclick="submitForm()">Kaydet</button>
            </form>
            <button type="button" onclick="deleteRecord()">Sil</button>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        let selectedTable = null;
        let selectedRecordId = null;

        function loadTableData(tableName) {
            selectedTable = tableName;

            fetch(`/api/admin/get${capitalize(tableName)}`)
                .then(response => response.json())
                .then(data => {
                    if (Array.isArray(data) && data.length > 0) {
                        const columns = Object.keys(data[0]);
                        const rows = data.map(item => Object.values(item));

                        let tableHtml = ` 
                                    <div class="table-header d-flex justify-content-between align-items-center">
                                        <h3>${capitalize(tableName)} Tablosu</h3>
                                        <button class="action-button add-button" onclick="showAddForm('${tableName}')">Yeni Eleman Ekle</button>
                                    </div>`;
                        tableHtml += "<table class='table table-striped table-bordered'><thead><tr>";

                        columns.forEach(column => {
                            tableHtml += `<th>${column}</th>`;
                        });
                        tableHtml += "<th>Actions</th></tr></thead><tbody>";

                        rows.forEach((row, index) => {
                            tableHtml += "<tr>";
                            row.forEach(cell => {
                                tableHtml += `<td>${cell}</td>`;
                            });
                            tableHtml += `<td><button class="action-button edit-button" onclick="editRecord(${index}, ${row[0]})">Düzenle</button>`;
                            tableHtml += `<button class="action-button delete-button" onclick="deleteRecord(${row[0]})">Sil</button></td>`;
                            tableHtml += "</tr>";
                        });

                        tableHtml += "</tbody></table>";
                        document.getElementById("tableData").innerHTML = tableHtml;
                        document.getElementById("crudActions").style.display = "none";
                    } else {
                        document.getElementById("tableData").innerHTML = "<p>Veri yüklenemedi. Lütfen tekrar deneyin.</p>";
                    }
                })
                .catch(error => console.error("Hata:", error));
        }

        function showAddForm(tableName) {
            selectedTable = tableName;
            const crudActionsDiv = document.getElementById("crudActions");

            crudActionsDiv.innerHTML = `<h3>Yeni ${capitalize(tableName)} Ekle</h3>
                                <form id="crudForm">
                                    <div id="formFields"></div>
                                    <button type="button" onclick="submitForm()">Kaydet</button>
                                </form>`;
            loadFormFields();
        }

        function loadFormFields() {
            const formFieldsDiv = document.getElementById("formFields");

            const fields = {
                Employees: ["name", "surname", "email"],
                Services: ["name", "description"],
                Users: ["name", "surname", "email"],
                Appointments: ["userId", "appointmentDate"]
            };

            const currentFields = fields[selectedTable] || [];
            formFieldsDiv.innerHTML = "";
            currentFields.forEach(field => {
                formFieldsDiv.innerHTML += `
                    <div>
                        <label for="${field}">${capitalize(field)}</label>
                        <input type="text" id="${field}" name="${field}" />
                    </div>
                `;
            });
        }

        function submitForm() {
            const form = document.getElementById("crudForm");
            const formData = new FormData(form);

            const data = {};
            formData.forEach((value, key) => {
                data[key] = value;
            });

            fetch(`/api/admin/${selectedTable.toLowerCase()}s`, {
                method: selectedRecordId ? "PUT" : "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(data)
            })
                .then(response => response.json())
                .then(() => {
                    loadTableData(selectedTable);
                })
                .catch(error => console.error("Hata:", error));
        }

        function editRecord(index, recordId) {
            selectedRecordId = recordId;
            const fields = document.querySelectorAll("#formFields input");
            fetch(`/api/admin/${selectedTable.toLowerCase()}s/${recordId}`)
                .then(response => response.json())
                .then(data => {
                    const form = document.getElementById("crudForm");
                    form.innerHTML = `<h3>Düzenle ${capitalize(selectedTable)}</h3>`;
                    Object.entries(data).forEach(([key, value]) => {
                        form.innerHTML += `<div>
                                            <label for="${key}">${capitalize(key)}</label>
                                            <input type="text" id="${key}" name="${key}" value="${value}" />
                                        </div>`;
                    });
                    form.innerHTML += `<button type="button" onclick="submitForm()">Kaydet</button>`;
                })
                .catch(error => console.error("Hata:", error));
        }

        function deleteRecord(recordId) {
            if (confirm("Emin misiniz?")) {
                fetch(`/api/admin/${selectedTable.toLowerCase()}s/${recordId}`, {
                    method: "DELETE"
                })
                    .then(() => {
                        loadTableData(selectedTable);
                    })
                    .catch(error => console.error("Hata:", error));
            }
        }

        function capitalize(string) {
            return string.charAt(0).toUpperCase() + string.slice(1);
        }

        window.onload = function() {
            loadTableData("Employees");
        };
    </script>

</body>
</html>
